class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        int dp[100][100];
        int res=0;
        int mini=100000000;   
        for(int r=0;r<n;r++){
            for(int c=0;c<n;c++){
                dp[r][c]=100000;
            }
        }
        for(vector<int>&v:edges){
            int v1=v[0];
            int v2=v[1];
            int cost=v[2];
            dp[v1][v2]=cost;dp[v2][v1]=cost;
        }
        for(int i=0;i<n;i++){
            dp[i][i]=0;
        }   
        //floy
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    dp[i][j]=min(dp[i][j],dp[i][k]+dp[k][j]);
                }
            }
        }
        for(int r=0;r<n;r++){
            int counter=0;
            for(int c=0;c<n;c++){
                if(dp[r][c]<=distanceThreshold)counter++;
            }
            if(counter<=mini){
                mini=counter;
                res=r;
            }
        }
        return res;
    }
};