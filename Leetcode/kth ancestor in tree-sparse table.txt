class TreeAncestor {
    
    int sparse[][];
    public TreeAncestor(int n, int[] p) {
        sparse=new int[p.length][20];
        for(int i=0;i<sparse.length;i++)Arrays.fill(sparse[i],-1);
        for(int i=0;i<p.length;i++){
            sparse[i][0]=p[i];
        }
        for(int i=1;i<20;i++){
            for(int j=0;j<p.length;j++){
                if(sparse[j][i-1]!=-1)sparse[j][i]=sparse[sparse[j][i-1]][i-1];
            }
        }
    }
    
    public int getKthAncestor(int node, int k) {
        
        for(int i=19;i>=0;i--){
            if(node==-1)break;
            if((k&(1<<i))!=0){
                node=sparse[node][i];
            }
        }
        return node;
    }
}

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor obj = new TreeAncestor(n, parent);
 * int param_1 = obj.getKthAncestor(node,k);
 */