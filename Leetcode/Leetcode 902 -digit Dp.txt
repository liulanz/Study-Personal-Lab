class Solution {
    public int atMostNGivenDigitSet(String[] A, int N) {
        int res=0;
        String s=N+"";
        Arrays.sort(A);
        int height=0;
        for(int i=0;i<s.length()-1;i++)res+=(int)(Math.pow(A.length,i+1));
        int dp[]=new int[s.length()];//[len N,endwith]
        for(int i=0;i<A.length;i++){
            if(A[i].charAt(0)<=s.charAt(s.length()-1))dp[s.length()-1]++;
        }
        for(int i=s.length()-2;i>=0;i--){
            height++;
            char c=s.charAt(i);
            for(String digit:A){
                char d=digit.charAt(0);
                if(d<c){
                    dp[i]+=Math.pow(A.length,height);
                }
                else if(d==c){
                    dp[i]+=dp[i+1];
                }
            }
        }
        return res+dp[0];
    }
}